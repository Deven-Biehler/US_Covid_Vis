<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CustomReferenceLineTooltips />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.RelationshipCalculations.true...RelationshipCalculations />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='joined_df.csv+ (Multiple Connections)' inline='true' name='federated.0ca2efw076iazf19oxm8g1t5afub' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cb_2018_us_county_20m' name='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e'>
            <connection class='ogrdirect' directory='C:/Users/biehl/CovidDataVis/Data_Visualization' filename='cb_2018_us_county_20m.shp' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='joined_df' name='textscan.02tusxc12j48cf1h8qrme09wkgxj'>
            <connection class='textscan' directory='C:/Users/biehl/CovidDataVis/Data_Visualization/Data' filename='joined_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e' name='cb_2018_us_county_20m.shp' table='[cb_2018_us_county_20m.shp]' type='table'>
          <columns>
            <column datatype='integer' name='FIPS2' ordinal='0' />
            <column datatype='spatial' name='Geometry' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.02tusxc12j48cf1h8qrme09wkgxj' name='joined_df.csv' table='[joined_df#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='CountyID' ordinal='1' />
              <column datatype='integer' name='StateID' ordinal='2' />
              <column datatype='string' name='State Name' ordinal='3' />
              <column datatype='real' name='Cases' ordinal='4' />
              <column datatype='real' name='Deaths' ordinal='5' />
              <column datatype='real' name='2021 Population' ordinal='6' />
              <column datatype='real' name='Cases Delta' ordinal='7' />
              <column datatype='real' name='Deaths Delta' ordinal='8' />
            </columns>
          </relation>
          <relation connection='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e' name='cb_2018_us_county_20m.shp' table='[cb_2018_us_county_20m.shp]' type='table'>
            <columns>
              <column datatype='integer' name='FIPS2' ordinal='0' />
              <column datatype='spatial' name='Geometry' ordinal='1' />
            </columns>
          </relation>
          <relation connection='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e' name='cb_2018_us_state_20m.shp' table='[cb_2018_us_state_20m.shp]' type='table'>
            <columns>
              <column datatype='string' name='STATEFP' ordinal='0' />
              <column datatype='spatial' name='Geometry' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2021 Population]' value='[joined_df.csv].[2021 Population]' />
          <map key='[Cases Delta]' value='[joined_df.csv].[Cases Delta]' />
          <map key='[Cases]' value='[joined_df.csv].[Cases]' />
          <map key='[CountyID]' value='[joined_df.csv].[CountyID]' />
          <map key='[Date]' value='[joined_df.csv].[Date]' />
          <map key='[Deaths Delta]' value='[joined_df.csv].[Deaths Delta]' />
          <map key='[Deaths]' value='[joined_df.csv].[Deaths]' />
          <map key='[FIPS2]' value='[cb_2018_us_county_20m.shp].[FIPS2]' />
          <map key='[Geometry (cb_2018_us_state_20m.shp)]' value='[cb_2018_us_state_20m.shp].[Geometry]' />
          <map key='[Geometry]' value='[cb_2018_us_county_20m.shp].[Geometry]' />
          <map key='[STATEFP]' value='[cb_2018_us_state_20m.shp].[STATEFP]' />
          <map key='[State Name]' value='[joined_df.csv].[State Name]' />
          <map key='[StateID]' value='[joined_df.csv].[StateID]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CountyID]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>CountyID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StateID]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>StateID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021 Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 Population]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>2021 Population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases Delta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cases Delta]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>Cases Delta</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths Delta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths Delta]</local-name>
            <parent-name>[joined_df.csv]</parent-name>
            <remote-alias>Deaths Delta</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS2]</local-name>
            <parent-name>[cb_2018_us_county_20m.shp]</parent-name>
            <remote-alias>FIPS2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[cb_2018_us_county_20m.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>10</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEFP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEFP]</local-name>
            <parent-name>[cb_2018_us_state_20m.shp]</parent-name>
            <remote-alias>STATEFP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry (cb_2018_us_state_20m.shp)]</local-name>
            <parent-name>[cb_2018_us_state_20m.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>12</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CFR 1%' datatype='real' name='[CFR .05% (copy)_560979657484005385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Cases])*0.01' />
      </column>
      <column caption='CFR 2%' datatype='real' name='[CFR 0.1% (copy)_560979657484091402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Cases])*0.02' />
      </column>
      <column caption='CFR 5%' datatype='real' name='[CFR 2% (copy)_560979657484386315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Cases])*0.05' />
      </column>
      <column caption='CFR 10%' datatype='real' name='[CFR 5% (copy)_560979657484435468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Cases])*0.1' />
      </column>
      <column caption='CFR 0.5%' datatype='real' name='[Calculation_560979657483354120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Cases])*0.005' />
      </column>
      <column caption='Mortality Rate' datatype='real' name='[Calculation_595882554555342849]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100000*[Deaths]/[2021 Population]' />
      </column>
      <column caption='Case Fatality Rate %' datatype='real' name='[Calculation_595882554556547074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*[Deaths]/[Cases]' />
      </column>
      <column caption='Infection Rate' datatype='real' name='[Calculation_595882554560974854]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100000*[Cases]/[2021 Population]' />
      </column>
      <column datatype='real' name='[Cases Delta]' role='measure' type='quantitative' />
      <column datatype='real' name='[Cases]' role='measure' type='quantitative' />
      <column caption='County ID' datatype='real' name='[CountyID]' role='dimension' type='ordinal' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Deaths Delta]' role='measure' type='quantitative' />
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Fips2' datatype='integer' name='[FIPS2]' role='measure' type='quantitative' />
      <column caption='Geometry (cb 2018 us state 20m.shp)' datatype='spatial' name='[Geometry (cb_2018_us_state_20m.shp)]' role='measure' type='nominal' />
      <column caption='Statefp' datatype='string' name='[STATEFP]' role='dimension' type='nominal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State ID' datatype='integer' name='[StateID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='cb_2018_us_county_20m.shp' datatype='table' name='[__tableau_internal_object_id__].[cb_2018_us_county_20m.shp_996497C7E558404FBC6E4EDC13AAA916]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cb_2018_us_state_20m.shp' datatype='table' name='[__tableau_internal_object_id__].[cb_2018_us_state_20m.shp_4656616A470D454CA2A01856CD9608F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='joined_df.csv' datatype='table' name='[__tableau_internal_object_id__].[joined_df.csv_4D04D66D482A4269B715E27FEE497E07]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_595882554555342849]' derivation='Avg' name='[avg:Calculation_595882554555342849:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_595882554556547074]' derivation='Avg' name='[avg:Calculation_595882554556547074:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_595882554560974854]' derivation='Avg' name='[avg:Calculation_595882554560974854:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_595882554555342849]' derivation='Sum' name='[sum:Calculation_595882554555342849:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_595882554556547074]' derivation='Sum' name='[sum:Calculation_595882554556547074:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_595882554560974854]' derivation='Sum' name='[sum:Calculation_595882554560974854:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cases Delta]' derivation='Sum' name='[sum:Cases Delta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths Delta]' derivation='Sum' name='[sum:Deaths Delta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CFR .05% (copy)_560979657484005385]' derivation='User' name='[usr:CFR .05% (copy)_560979657484005385:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CFR 0.1% (copy)_560979657484091402]' derivation='User' name='[usr:CFR 0.1% (copy)_560979657484091402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CFR 2% (copy)_560979657484386315]' derivation='User' name='[usr:CFR 2% (copy)_560979657484386315:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CFR 5% (copy)_560979657484435468]' derivation='User' name='[usr:CFR 5% (copy)_560979657484435468:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_560979657483354120]' derivation='User' name='[usr:Calculation_560979657483354120:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482174466:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482203139:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482342404:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482358789:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482387462:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657483087879:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR .05\% (copy)_560979657484005385:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Calculation_595882554555342849:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657483354120:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554556547074:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Calculation_595882554556547074:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 2\% (copy)_560979657484386315:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554555342849:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths Delta:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 0.1\% (copy)_560979657484091402:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554560974854:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Calculation_595882554560974854:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482174466:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482203139:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482342404:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482358789:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657482387462:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657483087879:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 5\% (copy)_560979657484435468:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cb_2018_us_county_20m.shp' id='cb_2018_us_county_20m.shp_996497C7E558404FBC6E4EDC13AAA916'>
            <properties context=''>
              <relation connection='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e' name='cb_2018_us_county_20m.shp' table='[cb_2018_us_county_20m.shp]' type='table'>
                <columns>
                  <column datatype='integer' name='FIPS2' ordinal='0' />
                  <column datatype='spatial' name='Geometry' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='cb_2018_us_state_20m.shp' id='cb_2018_us_state_20m.shp_4656616A470D454CA2A01856CD9608F1'>
            <properties context=''>
              <relation connection='ogrdirect.0pw2q7d1jacaoh0zx31zk02gcq0e' name='cb_2018_us_state_20m.shp' table='[cb_2018_us_state_20m.shp]' type='table'>
                <columns>
                  <column datatype='string' name='STATEFP' ordinal='0' />
                  <column datatype='spatial' name='Geometry' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='joined_df.csv' id='joined_df.csv_4D04D66D482A4269B715E27FEE497E07'>
            <properties context=''>
              <relation connection='textscan.02tusxc12j48cf1h8qrme09wkgxj' name='joined_df.csv' table='[joined_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='CountyID' ordinal='1' />
                  <column datatype='integer' name='StateID' ordinal='2' />
                  <column datatype='string' name='State Name' ordinal='3' />
                  <column datatype='real' name='Cases' ordinal='4' />
                  <column datatype='real' name='Deaths' ordinal='5' />
                  <column datatype='real' name='2021 Population' ordinal='6' />
                  <column datatype='real' name='Cases Delta' ordinal='7' />
                  <column datatype='real' name='Deaths Delta' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression _.fcp.RelationshipCalculations.false...op='[INT(CountyID)]' _.fcp.RelationshipCalculations.true...op='INT([CountyID])' />
              <expression op='[FIPS2]' />
            </expression>
            <first-end-point object-id='joined_df.csv_4D04D66D482A4269B715E27FEE497E07' />
            <second-end-point object-id='cb_2018_us_county_20m.shp_996497C7E558404FBC6E4EDC13AAA916' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[StateID]' />
              <expression _.fcp.RelationshipCalculations.false...op='[INT(STATEFP)]' _.fcp.RelationshipCalculations.true...op='INT([STATEFP])' />
            </expression>
            <first-end-point object-id='joined_df.csv_4D04D66D482A4269B715E27FEE497E07' />
            <second-end-point object-id='cb_2018_us_state_20m.shp_4656616A470D454CA2A01856CD9608F1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E6FB5277974048AB891260753C5E2D5B]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 5' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names,State Name' />
        <param name='target' value='Sheet 5' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases / Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column datatype='real' name='[Cases]' role='measure' type='quantitative' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]' scope='rows' value='Total Cases' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk] + [federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk])</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{936DD82A-14FD-44C4-9F2B-D86C4D2C4284}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delta Cases VS Delta Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column datatype='real' name='[Cases Delta]' role='measure' type='quantitative' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths Delta]' role='measure' type='quantitative' />
            <column-instance column='[Cases Delta]' derivation='Sum' name='[sum:Cases Delta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths Delta]' derivation='Sum' name='[sum:Deaths Delta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths Delta:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk]' scope='rows' value='Change in Cases' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths Delta:qk]' scope='rows' value='Change In Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths Delta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk] + [federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths Delta:qk])</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{76217890-4BEE-4CBD-B5E1-07325E76E6E6}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths Per 100,000 People</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column datatype='real' name='[2021 Population]' role='measure' type='quantitative' />
            <column caption='Mortality Rate' datatype='real' name='[Calculation_595882554555342849]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100000*[Deaths]/[2021 Population]' />
            </column>
            <column caption='Infection Rate' datatype='real' name='[Calculation_595882554560974854]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100000*[Cases]/[2021 Population]' />
            </column>
            <column datatype='real' name='[Cases]' role='measure' type='quantitative' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_595882554555342849]' derivation='Avg' name='[avg:Calculation_595882554555342849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_595882554560974854]' derivation='Avg' name='[avg:Calculation_595882554560974854:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554555342849:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554560974854:qk]' scope='rows' value='Infection Per 100,000 People' />
            <format attr='title' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554555342849:qk]' scope='rows' value='Deaths Per 100,000 People' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554560974854:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554555342849:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554560974854:qk] + [federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554555342849:qk])</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{3476D791-079E-43C0-9E1C-D01A53893612}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Fatality Rate of Covid-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column caption='Case Fatality Rate %' datatype='real' name='[Calculation_595882554556547074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Deaths]/[Cases]' />
            </column>
            <column datatype='real' name='[Cases]' role='measure' type='quantitative' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_595882554556547074]' derivation='Avg' name='[avg:Calculation_595882554556547074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]' />
              <lod column='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Lockdown ends' label-type='custom' scope='per-table' tooltip='Lockdown ends' tooltip-type='custom' value='#2020-08-01#' value-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' tooltip='Trump Tests Positive' tooltip-type='custom' value='#2020-10-03#' value-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Lockdown begins' label-type='custom' scope='per-pane' tooltip='Lockdown begins' tooltip-type='custom' value='#2020-03-15#' value-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554556547074:qk]</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{F1B418A5-E34D-4615-A9BD-1049800FB120}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Case Fatality Rate Scatter Plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column datatype='real' name='[2021 Population]' role='measure' type='quantitative' />
            <column caption='CFR 1%' datatype='real' name='[CFR .05% (copy)_560979657484005385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Cases])*0.01' />
            </column>
            <column caption='CFR 2%' datatype='real' name='[CFR 0.1% (copy)_560979657484091402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Cases])*0.02' />
            </column>
            <column caption='CFR 5%' datatype='real' name='[CFR 2% (copy)_560979657484386315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Cases])*0.05' />
            </column>
            <column caption='CFR 10%' datatype='real' name='[CFR 5% (copy)_560979657484435468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Cases])*0.1' />
            </column>
            <column caption='CFR 0.5%' datatype='real' name='[Calculation_560979657483354120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Cases])*0.005' />
            </column>
            <column caption='Case Fatality Rate %' datatype='real' name='[Calculation_595882554556547074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Deaths]/[Cases]' />
            </column>
            <column datatype='real' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_595882554556547074]' derivation='Avg' name='[avg:Calculation_595882554556547074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2021 Population]' derivation='Sum' name='[sum:2021 Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CFR .05% (copy)_560979657484005385]' derivation='User' name='[usr:CFR .05% (copy)_560979657484005385:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CFR 0.1% (copy)_560979657484091402]' derivation='User' name='[usr:CFR 0.1% (copy)_560979657484091402:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CFR 2% (copy)_560979657484386315]' derivation='User' name='[usr:CFR 2% (copy)_560979657484386315:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CFR 5% (copy)_560979657484435468]' derivation='User' name='[usr:CFR 5% (copy)_560979657484435468:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560979657483354120]' derivation='User' name='[usr:Calculation_560979657483354120:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:Calculation_560979657483354120:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR .05\% (copy)_560979657484005385:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 5\% (copy)_560979657484435468:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 0.1\% (copy)_560979657484091402:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ca2efw076iazf19oxm8g1t5afub].[usr:CFR 2\% (copy)_560979657484386315:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State Name:nk]' />
              <groupfilter function='member' level='[none:State Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:2021 Population:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]</column>
            <column>[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:2021 Population:qk]</column>
            <column>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0ca2efw076iazf19oxm8g1t5afub].[Multiple Values]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]' />
              <lod column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
              <lod column='[federated.0ca2efw076iazf19oxm8g1t5afub].[avg:Calculation_595882554556547074:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='shape' value=':filled/circle' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ca2efw076iazf19oxm8g1t5afub].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
              <lod column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]' />
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d1d5db' fontname='Arial Narrow'>Case Fatality Rate (CFR)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-range-field' value='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dashed' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-line-last' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Deaths:qk] + [federated.0ca2efw076iazf19oxm8g1t5afub].[Multiple Values])</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases:qk]</cols>
      </table>
      <simple-id uuid='{6320DF97-5D5B-4B21-924B-114A3A5CC37B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined_df.csv+ (Multiple Connections)' name='federated.0ca2efw076iazf19oxm8g1t5afub' />
          </datasources>
          <datasource-dependencies datasource='federated.0ca2efw076iazf19oxm8g1t5afub'>
            <column datatype='real' name='[Cases Delta]' role='measure' type='quantitative' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases Delta]' derivation='Sum' name='[sum:Cases Delta:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]' direction='DESC' using='[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Lockdown begins' label-type='custom' scope='per-pane' tooltip='Lockdown begins' tooltip-type='custom' value='#2020-03-15#' value-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Lockdown ends for most states' label-type='custom' scope='per-pane' tooltip='Lockdown ends for most states' tooltip-type='custom' value='#2020-08-01#' value-column='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0ca2efw076iazf19oxm8g1t5afub].[sum:Cases Delta:qk]</rows>
        <cols>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{1E253998-533A-42FC-B876-F3521F84BEE2}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10E0BEE6-BDC1-49AB-9BE8-19F10D3E3539}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62E080CD-4F78-4CFC-9D2A-C7246E2E6A9B}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C097351E-0644-4F2D-B1B5-23BB70B1224A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:Calculation_595882554558144516:qk]</field>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5F155AC-97B4-484C-8F8A-70C5640C6AFC}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[:Measure Names]</field>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:STATEFP:nk]</field>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CD929FE-69E2-48CF-A47E-364A747CB34F}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[none:State Name:nk]</field>
            <field>[federated.0ca2efw076iazf19oxm8g1t5afub].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC10FB22-894A-4D0F-A421-8ADF224577C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      9WkuK+X/A3eLZYf0L7lPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      lJ23vnMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
